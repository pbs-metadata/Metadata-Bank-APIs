{
	"title": "The Root Schema",
	"type": "object",
	"required": [
		"StructuralType",
		"Title",
		"ApproximateLength"
	],
	"errorMessage": {
		"type": "The request should be an object",
		"required": {
			"StructuralType": "StructuralType is Required",
			"Title": "Title is Required",
			"ApproximateLength": "ApproximateLength is Required",
			"SupplementalContentClass": "SupplementalContentClass is Required",
			"AlternateContentClass": "AlternateContentClass is Required"
		}
	},
	"additionalProperties": false,
	"properties": {
		"StructuralType": {
			"transform": [
				"trim",
				"toEnumCase"
			],
			"type": "string",
			"enum": [
				"Abstraction",
				"Performance",
				"Digital"
			],
			"errorMessage": {
				"type": "StructuralType must be a String",
				"enum": "StructuralType must be an Abstraction, Performace or Digital irrespective to Case."
			}
		},
		"SupplementalContentClass": {
			"transform": [
				"trim",
				"toEnumCase"
			],
			"type": "string",
			"enum": [
				"Image Spots",
				"Support Spots",
				"Disaster Spots",
				"Special Report Spots",
				"Kids Elements",
				"Animation Elements",
				"Annual Meeting Spots",
				"Award Spots",
				"Seasonal Spots",
				"NPR/PRI Spots",
				"Digital Channel Spots",
				"Channel Spots",
				"PBS Services Spots",
				"Tease",
				"Long Lead Tease",
				"Series Sell",
				"Next On",
				"Logos",
				"Web Tags",
				"Product Offers",
				"Literacy Tags",
				"System Cue - Internal",
				"System Cue - External",
				"System Cue - PBS Kids",
				"System Cue - PBS Kids Go!",
				"System Cue - PBS News and Perspectives",
				"Bug",
				"Coming Up",
				"NPR",
				"Pledge Break",
				"Open",
				"Credits",
				"Title",
				"Episodic Promo",
				"Filler",
				"Radio Spot",
				"One Time Only",
				"Turnkey Break",
				"Embedded Promo",
				"KIDSC-Embedded Promo"
			],
			"errorMessage": {
				"type": "SupplementalContentClass must be a String",
				"enum": "SupplementalContentClass must be an Image Spots, Support Spots, Disaster Spots, Special Report Spots, Kids Elements, Animation Elements, Annual Meeting Spots, Award Spots, Seasonal Spots, NPR/PRI Spots, Digital Channel Spots, Channel Spots, PBS Services Spots, Tease, Long Lead Tease, Series Sell, Next On, Logos, Web Tags, Product Offers, Literacy Tags, System Cue - Internal, System Cue - External, System Cue - PBS Kids, System Cue - PBS Kids Go!, System Cue - PBS News and Perspectives, Bug, Coming Up, NPR, Pledge Break, Open, Credits, Title, Episodic Promo, Filler, Radio Spot, One Time Only, Turnkey Break, Embedded Promo or KIDSC-Embedded Promo."
			}
		},
		"AlternateContentClass": {
			"transform": [
				"trim",
				"toEnumCase"
			],
			"type": "string",
			"enum": [
				"Descriptive Audio",
				"Camera Angle",
				"Parental Control",
				"Censored",
				"Commentary (Director)",
				"Commentary (Other)",
				"Sing"
			],
			"errorMessage": {
				"type": "AlternateContentClass must be a String",
				"enum": "AlternateContentClass must be an Descriptive Audio, Camera Angle, Parental Control, Censored, Commentary (Director), Commentary (Other) or Sing."
			}
		},
		"PromotionalClass": {
			"transform": [
				"trim",
				"toEnumCase"
			],
			"type": "string",
			"enum": [
				"Image Spots",
				"Support Spots",
				"Disaster Spots",
				"Special Report Spots",
				"Kids Elements",
				"Animation Elements",
				"Annual Meeting Spots",
				"Award Spots",
				"Seasonal Spots",
				"NPR/PRI Spots",
				"Digital Channel Spots",
				"Channel Spots",
				"PBS Services Spots",
				"Tease",
				"Long Lead Tease",
				"Series Sell",
				"Next On",
				"Coming Up",
				"Episodic Promo",
				"Radio Spot",
				"One Time Only",
				"Embedded Promo",
				"KIDSC-Embedded Promo"
			],
			"errorMessage": {
				"type": "PromotionalClass must be a String",
				"enum": "PromotionalClass must be an Image Spots, Support Spots, Disaster Spots, Special Report Spots, Kids Elements, Animation Elements, Annual Meeting Spots, Award Spots, Seasonal Spots, NPR/PRI Spots, Digital Channel Spots, Channel Spots, PBS Services Spots,Tease, Long Lead Tease, Series Sell, Next On, Coming Up, Episodic Promo, Radio Spot, One Time Only, Embedded Promo, KIDSC-Embedded Promo."
			}
		},
		"ReferentType": {
			"transform": [
				"trim",
				"toEnumCase"
			],
			"type": "string",
			"enum": [
				"Series",
				"Season",
				"TV",
				"Movie",
				"Short",
				"Web",
				"Compilation",
				"Supplemental"
			],
			"errorMessage": {
				"type": "ReferentType must be a String",
				"enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
			}
		},
		"Title": {
			"minLength": 1,
			"pattern": "^(.*)$",
			"type": "string",
			"errorMessage": {
				"type": "Title must be a String",
				"minLength": "Title should have a minimum one character"
			}
		},
		"ApproximateLength": {
			"pattern": "^(.*)$",
			"type": "string",
			"errorMessage": {
				"type": "ApproximateLength must be a String"
			}
		},
		"SupportedWorkRelationship": {
			"pattern": "^(.*)$",
			"type": "string",
			"errorMessage": {
				"type": "SupportedWorkRelationship must be a String"
			}
		},
		"EntryList": {
			"minItems": 1,
			"type": "array",
			"errorMessage": {
				"type": "EntryList must be an Array",
				"minItems": "EntryList should have a minimum one item"
			},
			"items": {
				"required": [
					"EntryClass",
					"EntryContentUID"
				],
				"type": "object",
				"errorMessage": {
					"type": "items should be an object",
					"required": {
						"EntryClass": "EntryClass is Required",
						"EntryContentUID": "EntryContentUID is Required"
					}
				},
				"additionalProperties": false,
				"properties": {
					"EntryClass": {
						"type": "string",
						"transform": [
							"trim",
							"toEnumCase"
						],
						"enum": [
							"Episode",
							"Installment",
							"Part",
							"Season",
							"Series",
							"Manifestation"
						],
						"errorMessage": {
							"type": "EntryClass must be a String",
							"enum": "EntryClass must be an Series, Season, Episode, Installment, Part or Manifestation irrespective to Case."
						}
					},
					"EntryContentUID": {
						"pattern": "^(.*)$",
						"type": "string",
						"errorMessage": {
							"type": "EntryContentUID must be a String"
						}
					}
				}
			}
		},
		"AlternateContentIDList": {
			"type": "array",
			"uniqueItems": true,
			"errorMessage": {
				"type": "AlternateContentIDList must be an Array",
				"uniqueItems": "AlternateContentIDList Contains a Duplicate Value"
			},
			"items": {
				"required": [
					"AlternateContentID"
				],
				"type": "object",
				"properties": {
					"AlternateContentID": {
						"pattern": "^(.*)$",
						"type": "string",
						"errorMessage": {
							"type": "AlternateContentID must be a string"
						}
					}
				},
				"errorMessage": {
					"type": "items should be an object",
					"required": {
						"AlternateContentID": "AlternateContentID is Required"
					}
				}
			}
		},
		"UseWindowTermList": {
			"type": "array",
			"uniqueItems": true,
			"items": {
				"required": [
					"Term"
				],
				"type": "object",
				"errorMessage": {
					"type": "items should be an object",
					"required": {
						"Term": "Term is Required"
					}
				},
				"properties": {
					"Term": {
						"minLength": 1,
						"pattern": "^(.*)$",
						"type": "string",
						"errorMessage": {
							"type": "Term must be a String",
							"minLength": "Term should not be empty or NULL"
						}
					}
				}
			},
			"errorMessage": {
				"type": "UseWindowTermList must be an Array",
				"uniqueItems": "UseWindowTermList contains a DUPLICATE value"
			}
		},
		"AuditFields": {
			"type": "object",
			"errorMessage": {
				"type": "The AuditFields should be an object"
			},
			"additionalProperties": false,
			"properties": {
				"MasterSourceSystemRecordType": {
					"minLength": 1,
					"pattern": "^(.*)$",
					"type": "string",
					"errorMessage": {
						"type": "MasterSourceSystemRecordType must be a String",
						"minLength": "MasterSourceSystemRecordType should not be empty"
					}
				},
				"CreatedBy": {
					"type": "string",
					"errorMessage": {
						"type": "CreatedBy must be a String"
					}
				},
				"UpdatedBy": {
					"type": "string",
					"errorMessage": {
						"type": "UpdatedBy must be a String"
					}
				}
			}
		}
	}
}