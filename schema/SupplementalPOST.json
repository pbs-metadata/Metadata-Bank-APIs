{
  "title": "The Root Schema",
  "type": "object",
  "required": ["StructuralType", "Title", "ApproximateLength"],
  "errorMessage": {
    "type": "The request should be an object",
    "required": {
      "StructuralType": "StructuralType is Required",
      "Title": "Title is Required",
      "ApproximateLength": "ApproximateLength is Required",
      "SupplementalContentClass": "SupplementalContentClass is Required",
      "AlternateContentClass": "AlternateContentClass is Required"
    }
  },
  "additionalProperties": false,
  "properties": {
    "StructuralType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Abstraction", "Performance", "Digital"],
      "errorMessage": {
        "type": "StructuralType must be a String",
        "enum": "StructuralType must be an Abstraction, Performance or Digital irrespective to Case."
      }
    },
    "SupplementalContentClass": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Image Spots",
        "Support Spots",
        "Disaster Spots",
        "Special Report Spots",
        "Kids Elements",
        "Animation Elements",
        "Annual Meeting Spots",
        "Award Spots",
        "Seasonal Spots",
        "NPR/PRI Spots",
        "Digital Channel Spots",
        "Channel Spots",
        "PBS Services Spots",
        "Tease",
        "Long Lead Tease",
        "Series Sell",
        "Next On",
        "Logos",
        "Web Tags",
        "Product Offers",
        "Literacy Tags",
        "System Cue - Internal",
        "System Cue - External",
        "System Cue - PBS Kids",
        "System Cue - PBS Kids Go!",
        "System Cue - PBS News and Perspectives",
        "Bug",
        "Coming Up",
        "NPR",
        "Pledge Break",
        "Open",
        "Credits",
        "Title",
        "Episodic Promo",
        "Filler",
        "Radio Spot",
        "One Time Only",
        "Turnkey Break",
        "Embedded Promo",
        "KIDSC-Embedded Promo",
        "Promo - Embedded Promo",
        "Promo - Kids Elements",
        "Promo - Tease",
        "Promo - Next On",
        "Overlay-Offer",
        "Promo - Coming Up",
        "Slate (For Air)",
        "Promo - Series Sell",
        "Overlay-Promo",
        "Promo - Support Spots",
        "Promo-KIDSC-Embedded Promo",
        "Promo - Episodic Promo",
        "Promo - Image Spots",
        "Promo - One Time Only",
        "Underwriting Spots"
      ],
      "errorMessage": {
        "type": "SupplementalContentClass must be a String",
        "enum": "SupplementalContentClass must be an Image Spots, Support Spots, Disaster Spots, Special Report Spots, Kids Elements, Animation Elements, Annual Meeting Spots, Award Spots, Seasonal Spots, NPR/PRI Spots, Digital Channel Spots, Channel Spots, PBS Services Spots, Tease, Long Lead Tease, Series Sell, Next On, Logos, Web Tags, Product Offers, Literacy Tags, System Cue - Internal, System Cue - External, System Cue - PBS Kids, System Cue - PBS Kids Go!, System Cue - PBS News and Perspectives, Bug, Coming Up, NPR, Pledge Break, Open, Credits, Title, Episodic Promo, Filler, Radio Spot, One Time Only, Turnkey Break, Embedded Promo, KIDSC-Embedded Promo, Promo - Embedded Promo, Promo - Kids Elements, Promo - Tease, Promo - Next On, Overlay-Offer, Promo - Coming Up, Slate (For Air), Promo - Series Sell, Overlay-Promo, Promo - Support Spots, Promo-KIDSC-Embedded Promo, Promo - Episodic Promo, Promo - Image Spots, Promo - One Time Only, Underwriting Spots."
      }
    },
    "AlternateContentClass": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Descriptive Audio",
        "Camera Angle",
        "Parental Control",
        "Censored",
        "Commentary (Director)",
        "Commentary (Other)",
        "Sing"
      ],
      "errorMessage": {
        "type": "AlternateContentClass must be a String",
        "enum": "AlternateContentClass must be an Descriptive Audio, Camera Angle, Parental Control, Censored, Commentary (Director), Commentary (Other) or Sing."
      }
    },
    "PromotionalClass": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Image Spots",
        "Support Spots",
        "Disaster Spots",
        "Special Report Spots",
        "Kids Elements",
        "Animation Elements",
        "Annual Meeting Spots",
        "Award Spots",
        "Seasonal Spots",
        "NPR/PRI Spots",
        "Digital Channel Spots",
        "Channel Spots",
        "PBS Services Spots",
        "Tease",
        "Long Lead Tease",
        "Series Sell",
        "Next On",
        "Coming Up",
        "Episodic Promo",
        "Radio Spot",
        "One Time Only",
        "Embedded Promo",
        "KIDSC-Embedded Promo",
        "Web Tags",
        "Slate (For Air)",
        "Promo-KIDSC-Embedded Promo",
        "Broadcast Underwriter",
        "On Air Offer"
      ],
      "errorMessage": {
        "type": "PromotionalClass must be a String",
        "enum": "PromotionalClass must be an Image Spots, Support Spots, Disaster Spots, Special Report Spots, Kids Elements, Animation Elements, Annual Meeting Spots, Award Spots, Seasonal Spots, NPR/PRI Spots, Digital Channel Spots, Channel Spots, PBS Services Spots,Tease, Long Lead Tease, Series Sell, Next On, Coming Up, Episodic Promo, Radio Spot, One Time Only, Embedded Promo, KIDSC-Embedded Promo, Web Tags, Slate (For Air), Promo-KIDSC-Embedded Promo, Broadcast Underwriter or On Air Offer."
      }
    },
    "ReferentType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Series",
        "Season",
        "TV",
        "Movie",
        "Short",
        "Web",
        "Compilation",
        "Supplemental"
      ],
      "errorMessage": {
        "type": "ReferentType must be a String",
        "enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
      }
    },
    "Title": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title must be a String",
        "minLength": "Title should have a minimum one character"
      }
    },
    "ApproximateLength": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": { "type": "ApproximateLength must be a String" }
    },
    "SupportedWorkRelationship": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": { "type": "SupportedWorkRelationship must be a String" }
    },
    "EntryList": {
      "minItems": 1,
      "type": "array",
      "errorMessage": {
        "type": "EntryList must be an Array",
        "minItems": "EntryList should have a minimum one item"
      },
      "items": {
        "required": ["EntryClass", "EntryContentUID"],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "EntryClass": "EntryClass is Required",
            "EntryContentUID": "EntryContentUID is Required"
          }
        },
        "additionalProperties": false,
        "properties": {
          "EntryClass": {
            "type": "string",
            "transform": ["trim", "toEnumCase"],
            "enum": [
              "Episode",
              "Installment",
              "Part",
              "Season",
              "Series",
              "Manifestation",
              "Compilation"
            ],
            "errorMessage": {
              "type": "EntryClass must be a String",
              "enum": "EntryClass must be an Series, Season, Episode, Installment, Part, Manifestation or Compilation irrespective to Case."
            }
          },
          "EntryContentUID": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": { "type": "EntryContentUID must be a String" }
          }
        }
      }
    },
    "UseWindowTermList": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "required": ["Term"],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "Term": "Term is Required"
          }
        },
        "properties": {
          "Term": {
            "minLength": 1,
            "pattern": "^(\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(Z)?)?)\\/(\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(Z)?)?)$",
            "type": "string",
            "errorMessage": {
              "type": "Term must be a String",
              "minLength": "Term should not be empty or NULL",
              "pattern": "Term must be a valid date range using one of these formats: 'YYYY-MM-DD' (or) 'YYYY-MM-DDTHH:MM:SSZ' (or) 'YYYY-MM-DDTHH:MM:SS' Example: '2025-09-23/2026-09-23' (or) '2025-09-23T00:00:00Z/2026-09-23T00:00:00'."
            }
          }
        }
      },
      "errorMessage": {
        "type": "UseWindowTermList must be an Array",
        "uniqueItems": "UseWindowTermList contains a DUPLICATE value"
      }
    },
    "AlternateContentIDList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "AlternateContentIDList must be an Array",
        "uniqueItems": "AlternateContentIDList Contains a Duplicate Value"
      },
      "items": {
        "required": ["AlternateContentID"],
        "type": "object",
        "properties": {
          "AlternateContentID": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": { "type": "AlternateContentID must be a string" }
          }
        },
        "errorMessage": {
          "type": "items should be an object",
          "required": { "AlternateContentID": "AlternateContentID is Required" }
        }
      }
    },
    "OrganizationList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "OrganizationList must be an Array",
        "uniqueItems": "OrganizationList contains duplicate values"
      },
      "items": {
        "required": ["OrganizationID", "DisplayName", "Role"],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "DisplayName": "DisplayName is required for Organization",
            "OrganizationID": "OrganizationID is required for Organization",
            "Role": "Role is required for Organization"
          }
        },
        "additionalProperties": false,
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "format": "OrganizationID must be in int32 format"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "minLength": 1,
            "errorMessage": {
              "type": "DisplayName should be string for Organization",
              "minLength": "DisplayName should not be empty/null"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String for Organization"
            }
          },
          "Role": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String for Organization"
            }
          },
          "Phone": {
            "pattern": "^(.*)$",
            "type": ["string", "null"],
            "errorMessage": {
              "type": "Phone must be a String for Organization"
            }
          },
          "PhoneType": {
            "pattern": "^(.*)$",
            "type": ["string", "null"],
            "errorMessage": {
              "type": "PhoneType must be a String for Organization"
            }
          },
          "Address": {
            "pattern": "^(.*)$",
            "type": ["string", "null"],
            "errorMessage": {
              "type": "Address must be a String for Organization"
            }
          },
          "ContactInfoList": {
            "type": "array",
            "minItems": 1,
            "errorMessage": {
              "type": "ContactInfoList must be an Array",
              "minItems": "Minimum one contact info is required"
            },
            "items": {
              "required": ["ContactID", "ContactName"],
              "type": "object",
              "errorMessage": {
                "type": "items should be an object",
                "required": {
                  "ContactID": "ContactID is Required for ContactInfo",
                  "ContactName": "ContactName is Required for ContactInfo"
                }
              },
              "additionalProperties": false,
              "properties": {
                "ContactID": {
                  "type": "integer",
                  "format": "int32",
                  "errorMessage": {
                    "type": "ContactID must be an Integer",
                    "format": "ContactID must be in int32 format"
                  }
                },
                "Phone": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Phone must be a String for ContactInfo"
                  }
                },
                "PhoneType": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PhoneType must be a String for ContactInfo"
                  }
                },
                "Address": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Address must be a String for ContactInfo"
                  }
                },
                "PrimaryEmail": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PrimaryEmail must be a String for ContactInfo"
                  }
                },
                "ContactName": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "minLength": 1,
                  "errorMessage": {
                    "type": "ContactName should be a String for ContactInfo",
                    "minLength": "ContactName should not be empty/null"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AuditFields": {
      "type": "object",
      "errorMessage": {
        "type": "The AuditFields should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "MasterSourceSystemRecordType": {
          "minLength": 1,
          "pattern": "^(.*)$",
          "type": "string",
          "errorMessage": {
            "type": "MasterSourceSystemRecordType must be a String",
            "minLength": "MasterSourceSystemRecordType should not be empty"
          }
        },
        "CreatedBy": {
          "type": "string",
          "errorMessage": { "type": "CreatedBy must be a String" }
        },
        "UpdatedBy": {
          "type": "string",
          "errorMessage": { "type": "UpdatedBy must be a String" }
        }
      }
    }
  }
}
