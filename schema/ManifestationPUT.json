{
  "title": "The Root Schema",
  "type": "object",
  "errorMessage": {
    "type": "The request should be an object"
  },
  "additionalProperties": false,
  "properties": {
    "ManifestationClass": {
      "minItems": 1,
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "ManifestationClass must be an Array",
        "minItems": "ManifestationClass should have minimum 1 value",
        "uniqueItems": "ManifestationClass contains a DUPLICATE value"
      },
      "items": {
        "transform": ["trim", "toEnumCase"],
        "type": "string",
        "enum": [
          "HD",
          "Main",
          "SD",
          "UPHD",
          "Adaptation Set",
          "Broadcast Package",
          "IMF",
          "Presentation",
          "Representation"
        ],
        "errorMessage": {
          "enum": "ManifestationClass item must be an HD, Main, SD, UPHD, Adaptation Set, Broadcast Package, IMF, Presentation or Representation irrepective to case."
        }
      }
    },
    "ParentUID": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ParentUID must be a String",
        "minLength": "ParentUID should have a minimum one character"
      }
    },
    "Title": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title must be a String",
        "minLength": "Title should have a minimum one character"
      }
    },
    "ReferentType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Series",
        "Season",
        "TV",
        "Movie",
        "Short",
        "Web",
        "Compilation",
        "Supplemental"
      ],
      "errorMessage": {
        "type": "ReferentType must be a String",
        "enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
      }
    },
    "StructuralType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Abstraction", "Performance", "Digital"],
      "errorMessage": {
        "type": "StructuralType must be a String",
        "enum": "StructuralType must be an Abstraction, Performance or Digital irrespective to Case."
      }
    },
    "ActualLength": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ActualLength must be a String"
      }
    },
    "Audio": {
      "required": ["AudioType", "ClosedCaption"],
      "type": "object",
      "errorMessage": {
        "type": "Audio should be an object",
        "required": {
          "ClosedCaption": "ClosedCaption is Required",
          "AudioType": "AudioType is Required"
        }
      },
      "properties": {
        "Language": {
          "pattern": "^(.*)$",
          "type": "string",
          "errorMessage": {
            "type": "Language must be a String"
          }
        },
        "ClosedCaption": {
          "pattern": "^(.*)$",
          "type": "string",
          "errorMessage": {
            "type": "ClosedCaption must be a String"
          }
        },
        "AudioType": {
          "transform": ["trim", "toEnumCase"],
          "type": "string",
          "enum": ["None", "Mono", "Stereo", "Stereo Surround", "Surround 5.1"],
          "errorMessage": {
            "type": "AudioType must be a String",
            "enum": "AudioType must be one of the given values - None, Mono, Stereo, Stereo Surround or Surround 5.1 irrespective to case. "
          }
        }
      }
    },
    "Video": {
      "required": ["Vchip", "ei"],
      "type": "object",
      "errorMessage": {
        "type": "Video should be an object",
        "required": {
          "Vchip": "Vchip is Required",
          "ei": "ei is Required"
        }
      },
      "properties": {
        "Vchip": {
          "transform": ["trim", "toEnumCase"],
          "type": "string",
          "enum": [
            "TV-Y7-FV",
            "TV-Y7",
            "TV-Y",
            "E",
            "TV-PG+VSLD",
            "TV-PG+VSL",
            "TV-PG+VSD",
            "TV-PG+VS",
            "TV-PG+VLD",
            "TV-PG+VL",
            "TV-PG+VD",
            "TV-PG+V",
            "TV-PG+SLD",
            "TV-PG+SL",
            "TV-PG+SD",
            "TV-PG+S",
            "TV-PG+LD",
            "TV-PG+L",
            "TV-PG+D",
            "TV-PG",
            "TV-MA+VSL",
            "TV-MA+VS",
            "TV-MA+VL",
            "TV-MA+V",
            "TV-MA+SL",
            "TV-MA+S",
            "TV-MA+L",
            "TV-MA",
            "TV-G",
            "TV-14+VSLD",
            "TV-14+VSL",
            "TV-14+VSD",
            "TV-14+VS",
            "TV-14+VLD",
            "TV-14+VL",
            "TV-14+VD",
            "TV-14+V",
            "TV-14+SLD",
            "TV-14+SL",
            "TV-14+SD",
            "TV-14+S",
            "TV-14+LD",
            "TV-14+L",
            "TV-14+D",
            "TV-14",
            "TV-PG-V"
          ],
          "errorMessage": {
            "type": "Vchip must be a String",
            "enum": "Vchip must be an TV-Y7-FV, TV-Y7, TV-Y, E, TV-PG+VSLD, TV-PG+VSL, TV-PG+VSD, TV-PG+VS, TV-PG+VLD, TV-PG+VL, TV-PG+VD, TV-PG+V, TV-PG+SLD, TV-PG+SL, TV-PG+SD, TV-PG+S, TV-PG+LD, TV-PG+L, TV-PG+D, TV-PG, TV-MA+VSL, TV-MA+VS, TV-MA+VL, TV-MA+V, TV-MA+SL, TV-MA+S, TV-MA+L, TV-MA, TV-G, TV-14+VSLD, TV-14+VSL, TV-14+VSD, TV-14+VS, TV-14+VLD, TV-14+VL, TV-14+VD, TV-14+V, TV-14+SLD, TV-14+SL, TV-14+SD, TV-14+S, TV-14+LD, TV-14+L, TV-14+D, TV-14, TV-PG-V irrespective to Case."
          }
        },
        "ei": {
          "type": "boolean",
          "errorMessage": {
            "type": "ei must be a Boolean"
          }
        },
        "HiDef": {
          "transform": ["trim", "toEnumCase"],
          "enum": ["720p", "1080i", "720i", "1080p", null],
          "errorMessage": {
            "enum": "HiDef must be 720p, 1080i, 720i, 1080p irrespective to Case."
          }
        }
      }
    },
    "EditIDList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "EditIDList must be an array",
        "uniqueItems": "EditIDList contains duplicate values"
      },
      "items": {
        "type": "string",
        "minLength": 1,
        "pattern": "^(.*)$",
        "errorMessage": {
          "type": "EditIDList items must be a String",
          "minLength": "EditIDList items should have MBank Edit UID"
        }
      }
    },
    "AuditFields": {
      "type": "object",
      "errorMessage": {
        "type": "The AuditFields should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "UpdatedBy": {
          "type": "string",
          "errorMessage": {
            "type": "UpdatedBy must be a String"
          }
        }
      }
    }
  }
}
