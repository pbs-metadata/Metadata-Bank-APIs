{
  "required": [
    "PolicyUID"
  ],
  "type": "object",
  "errorMessage": {
    "type": "The request should be an object",
    "required": {
      "PolicyUID": "PolicyUID is Required"
    }
  },
  "additionalProperties": false,
  "properties": {
    "PolicyUID": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "PolicyUID must be a String",
        "minLength": "PolicyUID should have a minimum one character"
      }
    },
    "Credited": {
      "type": "boolean",
      "errorMessage": {
        "type": "Credited must be a Boolean"
      }
    },
    "StartDate": {
      "type": "string",
      "format": "date",
      "errorMessage": {
        "type": "StartDate must be a String",
        "format": "StartDate must be in date format"
      }
    },
    "EndDate": {
      "type": "string",
      "format": "date",
      "errorMessage": {
        "type": "EndDate must be a String",
        "format": "EndDate must be in date format"
      }
    },
    "FundingType": {
      "type": "integer",
      "format": "int32",
      "errorMessage": {
        "type": "FundingType must be an Integer",
        "format": "FundingType must be in format int32"
      }
    },
    "ProducerFunding": {
      "type": "boolean",
      "errorMessage": {
        "type": "ProducerFunding must be a Boolean"
      }
    },
    "Constraint": {
      "type": "object",
      "errorMessage": {
        "type": "Constraint should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "AdditionalUnderwritingContraints": {
          "pattern": "^([\\s\\S]*)$",
          "type": "string",
          "errorMessage": {
            "type": "AdditionalUnderwritingContraints must be a String"
          }
        },
        "AdditionalConstraints": {
          "pattern": "^([\\s\\S]*)$",
          "type": "string",
          "errorMessage": {
            "type": "AdditionalConstraints must be a String"
          }
        },
        "LocalUnderwritingAvailabilty": {
          "transform": [
            "trim",
            "toEnumCase"
          ],
          "type": "string",
          "enum": [
            "Available",
            "Available Except to Competitors (List Below)",
            "Available with Producer Approval (Describe Below)",
            "Not Available"
          ],
          "errorMessage": {
            "type": "LocalUnderwritingAvailabilty must be a String",
            "enum": "LocalUnderwritingAvailabilty must be a Available, Available Except to Competitors (List Below), Available with Producer Approval (Describe Below), Not Available"
          }
        }
      }
    },
    "LogicalAssetIDList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "type": "LogicalAssetIDList must be an Array",
        "uniqueItems": "LogicalAssetIDList Contains a Duplicate Value"
      },
      "items": {
        "required": [
          "LogicalAssetID"
        ],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "LogicalAssetID": "LogicalAssetID is Required"
          }
        },
        "additionalProperties": false,
        "properties": {
          "LogicalAssetID": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "LogicalAssetID must be a String"
            }
          }
        }
      }
    },
    "OrganizationList": {
      "type": "array",
      "errorMessage": {
        "type": "OrganizationList must be an Array",
        "uniqueItems": "OrganizationList contains duplicate values"
      },
      "items": {
        "required": [
          "OrganizationID",
          "DisplayName",
          "Role"
        ],
        "type": "object",
        "errorMessage": {
          "type": "items should be an object",
          "required": {
            "DisplayName": "DisplayName is required for Organization",
            "OrganizationID": "OrganizationID is required for Organization",
            "Role": "Role is required for Organization"
          }
        },
        "additionalProperties": false,
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "format": "OrganizationID must be in int32 format"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String"
            }
          },
          "Role": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String"
            }
          },
          "Phone": {
            "pattern": "^(.*)$",
            "type": [
              "string",
              "null"
            ],
            "errorMessage": {
              "type": "Phone must be String or null"
            }
          },
          "PhoneType": {
            "pattern": "^(.*)$",
            "type": [
              "string",
              "null"
            ],
            "errorMessage": {
              "type": "PhoneType must be String or null"
            }
          },
          "Address": {
            "pattern": "^(.*)$",
            "type": [
              "string",
              "null"
            ],
            "errorMessage": {
              "type": "Address must be String or null"
            }
          },
          "PartyIDList": {
            "type": "array",
            "uniqueItems": true,
            "errorMessage": {
              "type": "PartyIDList must be an array",
              "uniqueItems": "PartyIDList contains duplicate values"
            },
            "items": {
              "required": [
                "PartyID"
              ],
              "type": "object",
              "errorMessage": {
                "type": "PartyIDList items should be an object",
                "required": {
                  "PartyID": "PartyID is Required"
                }
              },
              "additionalProperties": false,
              "properties": {
                "PartyID": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PartyID must be a String"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AuditFields": {
      "type": "object",
      "errorMessage": {
        "type": "The AuditFields should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "MasterSourceSystemRecordType": {
          "minLength": 1,
          "pattern": "^(.*)$",
          "type": "string",
          "errorMessage": {
            "type": "MasterSourceSystemRecordType must be a String",
            "minLength": "MasterSourceSystemRecordType should not be empty"
          }
        },
        "CreatedBy": {
          "type": "string",
          "errorMessage": {
            "type": "CreatedBy must be a String"
          }
        },
        "UpdatedBy": {
          "type": "string",
          "errorMessage": {
            "type": "UpdatedBy must be a String"
          }
        }
      }
    }
  }
}