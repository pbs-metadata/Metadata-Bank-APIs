{
  "type": "object",
  "errorMessage": {
    "type": "The request should be an object"
  },
  "additionalProperties": false,
  "properties": {
    "EpisodeUID": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EpisodeUID must be a String"
      }
    },
    "ParentUID": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ParentUID must be a String",
        "minLength": "ParentUID should have minimum one character"
      }
    },
    "StructuralType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Abstraction", "Performance", "Digital"],
      "errorMessage": {
        "type": "StructuralType must be a String",
        "enum": "StructuralType must be an Abstraction, Performace or Digital irrespective to Case."
      }
    },
    "ReferentType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Series",
        "Season",
        "TV",
        "Movie",
        "Short",
        "Web",
        "Compilation",
        "Supplemental"
      ],
      "errorMessage": {
        "type": "ReferentType must be a String",
        "enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
      }
    },
    "SeasonClass": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Adjunct", "Main", "Miniseries", "Pro Forma", "Recut"],
      "errorMessage": {
        "type": "SeasonClass must be a String",
        "enum": "SeasonClass must be one of the given values - Adjunct, Main, Miniseries, Pro-Forma or Recut irrespective to case. "
      }
    },
    "SequenceNumber": {
      "type": "integer",
      "format": "int32",
      "errorMessage": {
        "type": "SequenceNumber must be a Number"
      }
    },
    "Keywords": {
      "type": "object",
      "errorMessage": {
        "type": "Keywords should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "Mood": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Mood items must be a String",
              "minLength": "Mood items should have a minimum one character"
            }
          }
        },
        "Theme": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Theme items must be a String",
              "minLength": "Theme items should have a minimum one character"
            }
          }
        },
        "Character": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Character items must be a String",
              "minLength": "Character items should have a minimum one character"
            }
          }
        },
        "Setting": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Setting items must be a String",
              "minLength": "Setting items should have a minimum one character"
            }
          }
        },
        "Subject": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Subject items must be a String",
              "minLength": "Subject items should have a minimum one character"
            }
          }
        },
        "General": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "General items must be a String",
              "minLength": "General items should have a minimum one character"
            }
          }
        },
        "TimePeriod": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "TimePeriod items must be a String",
              "minLength": "TimePeriod items should have a minimum one character"
            }
          }
        }
      }
    },
    "Title": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title must be a String",
        "minLength": "Title should have a minimum one character"
      }
    },
    "TitleClass": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "TitleClass must be a String",
        "minLength": "TitleClass should have a minimum one character"
      }
    },
    "EntityType": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EntityType must be a String"
      }
    },
    "EidrId": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EidrId must be a String"
      }
    },
    "IsEIDRDuplicateFound": {
      "type": "boolean",
      "errorMessage": {
        "type": "IsEIDRDuplicateFound must be a Boolean"
      }
    },
    "USTVRating": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "TV-Y7-FV",
        "TV-Y7",
        "TV-Y",
        "E",
        "TV-PG+VSLD",
        "TV-PG+VSL",
        "TV-PG+VSD",
        "TV-PG+VS",
        "TV-PG+VLD",
        "TV-PG+VL",
        "TV-PG+VD",
        "TV-PG+V",
        "TV-PG+SLD",
        "TV-PG+SL",
        "TV-PG+SD",
        "TV-PG+S",
        "TV-PG+LD",
        "TV-PG+L",
        "TV-PG+D",
        "TV-PG",
        "TV-MA+VSL",
        "TV-MA+VS",
        "TV-MA+VL",
        "TV-MA+V",
        "TV-MA+SL",
        "TV-MA+S",
        "TV-MA+L",
        "TV-MA",
        "TV-G",
        "TV-14+VSLD",
        "TV-14+VSL",
        "TV-14+VSD",
        "TV-14+VS",
        "TV-14+VLD",
        "TV-14+VL",
        "TV-14+VD",
        "TV-14+V",
        "TV-14+SLD",
        "TV-14+SL",
        "TV-14+SD",
        "TV-14+S",
        "TV-14+LD",
        "TV-14+L",
        "TV-14+D",
        "TV-14",
        "TV-PG-V"
      ],
      "errorMessage": {
        "type": "USTVRating must be a String",
        "enum": "USTVRating must be one of the given values - TV-Y7-FV, TV-Y7, TV-Y, E, TV-PG+VSLD, TV-PG+VSL, TV-PG+VSD, TV-PG+VS, TV-PG+VLD, TV-PG+VL, TV-PG+VD, TV-PG+V, TV-PG+SLD, TV-PG+SL, TV-PG+SD, TV-PG+S, TV-PG+LD, TV-PG+L, TV-PG+D, TV-PG, TV-MA+VSL, TV-MA+VS, TV-MA+VL, TV-MA+V, TV-MA+SL, TV-MA+S, TV-MA+L, TV-MA, TV-G, TV-14+VSLD, TV-14+VSL, TV-14+VSD, TV-14+VS, TV-14+VLD, TV-14+VL, TV-14+VD, TV-14+V, TV-14+SLD, TV-14+SL, TV-14+SD, TV-14+S, TV-14+LD, TV-14+L, TV-14+D, TV-14 or TV-PG-V irrespective to case. "
      }
    },
    "OrganizationList": {
      "type": "array",
      "errorMessage": {
        "type": "OrganizationList must be an Array"
      },
      "items": {
        "required": ["ContactInfoList", "OrganizationID", "Role"],
        "type": "object",
        "errorMessage": {
          "type": "contains should be an object",
          "required": {
            "ContactInfoList": "ContactInfoList is Required",
            "OrganizationID": "OrganizationID is Required",
            "Role": "Role is Required"
          }
        },
        "additionalProperties": false,
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "format": "OrganizationID must be in int32 format"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String"
            }
          },
          "Role": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String"
            }
          },
          "ContactInfoList": {
            "type": "array",
            "minItems": 1,
            "errorMessage": {
              "type": "ContactInfoList must be an Array",
              "minItems": "Minimum one contact info is required"
            },
            "items": {
              "required": ["ContactID"],
              "type": "object",
              "errorMessage": {
                "type": "items should be an object",
                "required": {
                  "ContactID": "ContactID is Required"
                }
              },
              "additionalProperties": false,
              "properties": {
                "ContactID": {
                  "type": "integer",
                  "format": "int32",
                  "errorMessage": {
                    "format": "ContactID must be in int32 format",
                    "type": "ContactID must be an Integer"
                  }
                },
                "Phone": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Phone must be a String"
                  }
                },
                "PhoneType": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PhoneType must be a String"
                  }
                },
                "Address": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Address must be a String"
                  }
                },
                "PrimaryEmail": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PrimaryEmail must be a String"
                  }
                },
                "ContactName": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "ContactName must be a String"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AdditionalData": {
      "type": "object",
      "errorMessage": {
        "type": "The AdditionalData should be an object"
      },
      "additionalProperties": false,
      "properties": {
        "UpdatedBy": {
          "type": "string",
          "errorMessage": {
            "type": "UpdatedBy must be a String"
          }
        },
        "Source": {
          "type": "string",
          "errorMessage": {
            "type": "Source must be a String"
          }
        }
      }
    }
  }
}
