{
  "type": "object",
  "errorMessage": {
    "type": "The request should be an object"
  },
  "properties": {
    "SeasonUID": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "SeasonUID must be a String"
      }
    },
    "EpisodeUID": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EpisodeUID must be a String"
      }
    },
    "ParentUID": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ParentUID must be a String",
        "minLength": "ParentUID should have minimum one character"
      }
    },
    "StructuralType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Abstraction", "Performance", "Digital"],
      "errorMessage": {
        "type": "StructuralType must be a String",
        "enum": "StructuralType must be an Abstraction, Performace or Digital irrespective to Case."
      }
    },
    "ReferentType": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": [
        "Series",
        "Season",
        "TV",
        "Movie",
        "Short",
        "Web",
        "Compilation",
        "Supplemental"
      ],
      "errorMessage": {
        "type": "ReferentType must be a String",
        "enum": "ReferentType must be a Series, Season, TV, Movie, Short, Web, Compilation or Supplemental irrepective to case."
      }
    },
    "SeasonClass": {
      "transform": ["trim", "toEnumCase"],
      "type": "string",
      "enum": ["Adjunct", "Main", "Miniseries", "Pro Forma", "Recut"],
      "errorMessage": {
        "type": "SeasonClass must be a String",
        "enum": "SeasonClass must be one of the given values - Adjunct, Main, Mini-series, Pro-Forma or Recut irrespective to case. "
      }
    },
    "SequenceNumber": {
      "type": "integer",
      "format": "int32",
      "errorMessage": {
        "type": "SequenceNumber must be a Number"
      }
    },
    "Keywords": {
      "type": "object",
      "errorMessage": {
        "type": "Keywords should be an object"
      },
      "properties": {
        "Mood": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Mood items must be a String",
              "minLength": "Mood items should have a minimum one character"
            }
          }
        },
        "Theme": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Theme items must be a String",
              "minLength": "Theme items should have a minimum one character"
            }
          }
        },
        "Character": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Character items must be a String",
              "minLength": "Character items should have a minimum one character"
            }
          }
        },
        "Setting": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Setting items must be a String",
              "minLength": "Setting items should have a minimum one character"
            }
          }
        },
        "Subject": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "Subject items must be a String",
              "minLength": "Subject items should have a minimum one character"
            }
          }
        },
        "General": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "General items must be a String",
              "minLength": "General items should have a minimum one character"
            }
          }
        },
        "TimePeriod": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "pattern": "^(.*)$",
            "errorMessage": {
              "type": "TimePeriod items must be a String",
              "minLength": "TimePeriod items should have a minimum one character"
            }
          }
        }
      }
    },
    "Title": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "Title must be a String",
        "minLength": "Title should have a minimum one character"
      }
    },
    "TitleClass": {
      "minLength": 1,
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "TitleClass must be a String",
        "minLength": "TitleClass should have a minimum one character"
      }
    },
    "EntityType": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EntityType must be a String"
      }
    },
    "EidrId": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "EidrId must be a String"
      }
    },
    "CreateDateTime": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "CreateDateTime must be a String"
      }
    },
    "UpdateDateTime": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "UpdateDateTime must be a String"
      }
    },
    "PublishedStatus": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "PublishedStatus must be a String"
      }
    },
    "ReleaseDate": {
      "pattern": "^(.*)$",
      "type": "string",
      "errorMessage": {
        "type": "ReleaseDate must be a String"
      }
    },    
	"OrganizationList": {
      "type": "array",
      "uniqueItems": true,
      "errorMessage": {
        "uniqueItems": "OrganisationList Contains a Duplicate Value",
        "type": "OrganizationList must be an Array"
      },
      "items": {
        "required": [
          "ContactInfoList",
          "OrganizationID",
          "Role"
        ],
        "type": "object",
        "errorMessage": {
          "type": "contains should be an object",
          "required": {
            "ContactInfoList": "ContactInfoList is Required",
            "OrganizationID": "OrganizationID is Required",
            "Role": "Role is Required"
          }
        },
        "properties": {
          "OrganizationID": {
            "type": "integer",
            "format": "int32",
            "errorMessage": {
              "type": "OrganizationID must be an Integer",
              "format": "OrganizationID must be in int32 format"
            }
          },
          "DisplayName": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "DisplayName must be a String"
            }
          },
          "Domain": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Domain must be a String"
            }
          },
          "Role": {
            "pattern": "^(.*)$",
            "type": "string",
            "errorMessage": {
              "type": "Role must be a String"
            }
          },
          "ContactInfoList": {
            "type": "array",
            "minItems": 1,
            "errorMessage": {
              "type": "ContactInfoList must be an Array",
              "minItems": "Minimum one contact info is required"
            },
            "items": {
              "required": [
                "ContactID"
              ],
              "type": "object",
              "errorMessage": {
                "type": "items should be an object",
                "required": {
                  "ContactID": "ContactID is Required"
                }
              },
              "properties": {
                "ContactID": {
                  "type": "integer",
                  "format": "int32",
                  "errorMessage": {
                    "format": "ContactID must be in int32 format",
                    "type": "ContactID must be an Integer"
                  }
                },
                "Phone": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Phone must be a String"
                  }
                },
                "PhoneType": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PhoneType must be a String"
                  }
                },
                "Address": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "Address must be a String"
                  }
                },
                "PrimaryEmail": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "PrimaryEmail must be a String"
                  }
                },
                "ContactName": {
                  "pattern": "^(.*)$",
                  "type": "string",
                  "errorMessage": {
                    "type": "ContactName must be a String"
                  }
                }
              }
            }
          }
        }
      }
    },
	"USTVRating": {
	  "transform": ["trim", "toEnumCase"],
	  "type": "string",
	  "enum": ["V-Y", "TV-Y7", "TV-G", "TV-PG", "TV-14", "TV-MA"],
	  "errorMessage": {
		"type": "USTVRating must be a String",
		"enum": "USTVRating must be one of the given values - V-Y, TV-Y7, TV-G, TV-PG, TV-14 or TV-MA irrespective to case. "
	  }
	},
    "additionalData": {
			"type": "object",
			"errorMessage": {
			  	"type": "The additionalData should be an object"
			},
			"properties": {
        "CreatedBy": {
					"type": "string",
					"errorMessage": {
						"type": "CreatedBy must be a String"
					}
				},
				"Source": {
					"type": "string",
					"errorMessage": {
						"type": "Source must be a String"
					}
				},
				"UpdatedBy": {
					"type": "string",
					"errorMessage": {
						"type": "UpdatedBy must be a String"
					}
				},
				"DeletedBy": {
					"type": "string",
					"errorMessage": {
						"type": "DeletedBy must be a String"
					}
				}
			}
		}
  }
}
